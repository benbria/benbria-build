// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var coffeeLint, commander, formatEntry, fs, log, processCli, processFile, _;

  _ = require('lodash');

  coffeeLint = require('coffeelint');

  commander = require('commander');

  fs = require('fs');

  log = require('yadsil')('coffeelint');

  processCli = function() {
    commander.usage('<files> [options]').option('-c, --config <file>', 'specify configuration file').option('-v, --verbose', 'show more information on errors').option('--color', 'force color display out of a TTY').parse(process.argv);
    log.color(commander.color);
    return commander;
  };

  formatEntry = function(filePath, entry) {
    return "" + filePath + ":" + entry.lineNumber + ": " + entry.message;
  };

  processFile = function(filePath, lintOptions, options) {
    var content, entry, error, okay, result, _i, _len;
    okay = true;
    try {
      content = fs.readFileSync(filePath, 'utf8');
      result = coffeeLint.lint(content, lintOptions);
    } catch (_error) {
      error = _error;
      log.error("" + filePath + ": " + error.message);
      return false;
    }
    for (_i = 0, _len = result.length; _i < _len; _i++) {
      entry = result[_i];
      if (entry.level === 'error') {
        log.error(formatEntry(filePath, entry));
        okay = false;
      } else {
        log.warning(formatEntry(filePath, entry));
      }
      if (!options.verbose) {
        continue;
      }
      log.info("violates rule: " + entry.rule);
      if (entry.context != null) {
        log.info(entry.context);
      }
    }
    return okay;
  };

  (function() {
    var filePath, lintOptions, okay, _i, _len, _ref;
    commander = processCli();
    lintOptions = null;
    if (commander.config) {
      lintOptions = JSON.parse(fs.readFileSync(commander.config, 'utf8'));
    }
    okay = true;
    _ref = commander.args;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      filePath = _ref[_i];
      okay &= processFile(filePath, lintOptions, commander);
    }
    if (!okay) {
      return process.exit(1);
    }
  })();

}).call(this);

//# sourceMappingURL=coffeelint.map
